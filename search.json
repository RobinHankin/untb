[{"path":"https://robinhankin.github.io/untb/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor covenant code of conduct","title":"Contributor covenant code of conduct","text":"members, contributors, leaders wish make participation community pleasant productive experience everyone. try act interact ways contribute open, welcoming, inclusive, healthy community. assume good faith, per WP:AGF. Examples behaviour contributes positive environment community include: Demonstrating empathy kindness toward people Communicating respectfully differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community","code":""},{"path":"https://robinhankin.github.io/untb/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to untb","title":"Contributing to untb","text":"Thank considering contributing untb! appreciate interest making project better. Please read adhere Code Conduct maintain safe, welcoming, inclusive environment. Various forms contributions welcome: Bug Reports: Feel free report bugs encounter. Documentation: Typos, clarity issues, missing guides: help welcome . Feature Discussions/Requests: Got idea? Open issue discuss potential. Code Contributions: code contributions welcome. Tests checks run CI, however locally one can use: devtools::test(). Ideally change documented. Major changes vignettes.","code":""},{"path":"https://robinhankin.github.io/untb/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robin K. S. Hankin. Author, maintainer.","code":""},{"path":"https://robinhankin.github.io/untb/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"R. K. S. Hankin 2007. Introducing untb, R package simulating \t     ecological drift unified nuetral theory              biodiversity Journal Statistical Software 22(12)","code":"@Article{,   title = {Introducing untb, an R package for simulating \t     ecological drift under the unified nuetral theory of              biodiversity},   author = {{Robin K. S. Hankin}},   journal = {Journal of Statistical Software},   year = {2007},   month = {September},   volume = {22},   issue = {12}, }"},{"path":"https://robinhankin.github.io/untb/index.html","id":"the-unified-neutral-theory-of-biodiversity-the-untb-package","dir":"","previous_headings":"","what":"Ecological Drift under the UNTB","title":"Ecological Drift under the UNTB","text":"untb package provides R-centric functionality working Hubbell’s unified neutral theory biogeography biodiversity. vignette provided package. canonical reference Hubbell 2001; cite package publications please use Hankin 2007.","code":""},{"path":"https://robinhankin.github.io/untb/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ecological Drift under the UNTB","text":"can install released version untb package CRAN :","code":"# install.packages(\"untb\")  # uncomment this to install the package library(\"untb\") set.seed(0)"},{"path":"https://robinhankin.github.io/untb/index.html","id":"the-untb-package-in-use","dir":"","previous_headings":"","what":"The untb package in use","title":"Ecological Drift under the UNTB","text":"package two main classes, count census. count object named integer vector, names species entries respective counts. Thus: , see 9 cats, 3 pigs, . Function summary() gives information. census object unordered factor entries species individual: package includes example datasets: can give visual summary dataset two ways:   package also includes ability generate random neutral assemblages:","code":"x <- count(c(cats=9,pigs=3,dogs=2,rats=1,hogs=1,bats=1)) x #> cats pigs dogs rats hogs bats  #>    9    3    2    1    1    1 summary(x) #> Number of individuals: 17  #> Number of species: 6  #> Number of singletons: 3  #> Most abundant species: cats (9 individuals) #> estimated theta:  2.861392 as.census(x) #>  [1] cats cats cats cats cats cats cats cats cats pigs pigs pigs dogs dogs rats #> [16] hogs bats #> Levels: cats pigs dogs rats hogs bats data(sahfos) summary(sahfos) #> Number of individuals: 460182  #> Number of species: 54  #> Number of singletons: 10  #> Most abundant species: Echinodermata larvae (247200 individuals) #> estimated theta:  4.649568 plot(sahfos) plot(preston(sahfos)) summary(rand.neutral(1000,10)) #> Number of individuals: 1000  #> Number of species: 47  #> Number of singletons: 8  #> Most abundant species: 2 (330 individuals) #> estimated theta:  10.09543 summary(rand.neutral(1000,10)) #> Number of individuals: 1000  #> Number of species: 52  #> Number of singletons: 16  #> Most abundant species: 4 (117 individuals) #> estimated theta:  11.50422"},{"path":"https://robinhankin.github.io/untb/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Ecological Drift under the UNTB","text":"S. P. Hubbell 2001. “Unified Neutral Theory Biodiversity Biogeography”, Princeton University Press. R. K. S. Hankin, 2007. “Introducing untb, R package simulating ecological drift unified nuetral theory biodiversity”, Journal Statistical Software 22(12)","code":""},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":null,"dir":"Reference","previous_headings":"","what":"Various functions from Alonso and McKane 2004 — alonso","title":"Various functions from Alonso and McKane 2004 — alonso","text":"Various functions Alonso McKane 2004 dealing analytical   solutions neutral model biodiversity","code":""},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Various functions from Alonso and McKane 2004 — alonso","text":"","code":"alonso.eqn6(JM, n, theta) alonso.eqn11(J, n, theta) alonso.eqn12(J, n, theta, give=FALSE)"},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Various functions from Alonso and McKane 2004 — alonso","text":"J,JM Size community metacommunity respectively n Abundance theta Biodiversity constant give function alonso.eqn12(), Boolean default     FALSE meaning return value integral,     TRUE meaning return full output integrate()","code":""},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Various functions from Alonso and McKane 2004 — alonso","text":"Notation follows Alonso McKane 2004","code":""},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Various functions from Alonso and McKane 2004 — alonso","text":"D. Alonso . J. McKane 2004.  “Sampling   Hubbell's neutral model biodiversity”, Ecology Letters 7:901-910","code":""},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Various functions from Alonso and McKane 2004 — alonso","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Various functions from Alonso and McKane 2004 — alonso","text":"Function alonso.eqn6() identical function   vallade.eqn5()","code":""},{"path":"https://robinhankin.github.io/untb/reference/alonso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Various functions from Alonso and McKane 2004 — alonso","text":"","code":"J <- 100 plot(1:J , alonso.eqn11(J,n=1:J, theta=5),log=\"y\",type=\"l\",xlab=\"n\",ylab=expression(S(n)),main=\"Eqns 11 and 12 of Alonso and McKane\") points(1:J , alonso.eqn12(J,n=1:J, theta=5),type=\"l\",lty=2) legend(\"topright\",legend=c(\"equation 11\",\"equation 12\"),lty=1:2)"},{"path":"https://robinhankin.github.io/untb/reference/bci.html","id":null,"dir":"Reference","previous_headings":"","what":"Barro Colorado Island (BCI) dataset — bci","title":"Barro Colorado Island (BCI) dataset — bci","text":"BCI dataset contains location species identity 10cm   dbh (diameter breast height) trees Barro Colorado Island,   currently years 1981-1983, 1985, 1990, 1995, 2000, 2005.    subset interest abundances 252 species   recorded. BCI dataset included untb package,   licence appears inconsistent GPL. discussed used example dataset   Hankin 2007.","code":""},{"path":"https://robinhankin.github.io/untb/reference/bci.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Barro Colorado Island (BCI) dataset — bci","text":"http://www.stri.org/english/research/facilities/terrestrial/barro_colorado/index.php","code":""},{"path":"https://robinhankin.github.io/untb/reference/bci.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Barro Colorado Island (BCI) dataset — bci","text":"R. Condit, S. P. Hubbell R. B. Foster 2005. Barro       Colorado Forest Census Plot Data S. P. Hubbell 2001.  “Unified Neutral Theory       Biodiversity”.  Princeton University Press. R. K. S. Hankin 2007.  “Introducing untb, R       package simulating ecological drift unified neutral       theory biodiversity”.  Journal Statistical Software,       volume 22, issue 12","code":""},{"path":"https://robinhankin.github.io/untb/reference/butterflies.html","id":null,"dir":"Reference","previous_headings":"","what":"abundance data for butterflies — butterflies","title":"abundance data for butterflies — butterflies","text":"dataset class “count” showing abundance several butterfly species","code":""},{"path":"https://robinhankin.github.io/untb/reference/butterflies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"abundance data for butterflies — butterflies","text":"","code":"data(butterflies)"},{"path":"https://robinhankin.github.io/untb/reference/butterflies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"abundance data for butterflies — butterflies","text":"table names different butterfly species, entries corresponding respective numbers individuals.","code":""},{"path":"https://robinhankin.github.io/untb/reference/butterflies.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"abundance data for butterflies — butterflies","text":"Texas Birding Naturalist Web","code":""},{"path":"https://robinhankin.github.io/untb/reference/butterflies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"abundance data for butterflies — butterflies","text":"","code":"data(butterflies) plot(butterflies, uncertainty=TRUE)"},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset due to Caruso — caruso","title":"Dataset due to Caruso — caruso","text":"dataframe standard format due Migliorini Caruso presenting   observations oribatid mites.","code":""},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset due to Caruso — caruso","text":"","code":"data(caruso)"},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset due to Caruso — caruso","text":"Dataset caruso data frame 194 observations 5   variables.  row corresponds species; observations (rows)   species abundances 5 habitats. Following Migliorini et al 2002, habitats :  pure beech woodland (‘Beech’) coppice woodland (‘Coppice’) grassland (‘Grassland’) heathland (‘Heathland’) ‘Biancana’ badlands (‘Biancana’)","code":""},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset due to Caruso — caruso","text":"Oribatid mites rather small interesting free living soil  microarthropods.  huge species diversity populations  characterised highly aggregated distributions multiple spatial  scales ranging centimetres hundreds meters. Within habitat, several soil samples collected (five randomly  located replicates per month: see paper Migliorini et  al. 2002). , actually, network small samples make  single large sample. five study areas data set belong five habitats  typical Mediterranean region.  five areas also  belong rather homogeneous biogeographical region (southern  Tuscany).  ground known biology community  patterns Oribatida, several -priori hypotheses can made  expected changes diversity assemblages immigration  rates respectively within five areas.  instance,  Neutral Model one might expect Beech forest  highest Theta immigration rate 1, one  might expect opposite Biancana (arid habitat, kind  gariga/garrigue patchy vegetation).","code":""},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataset due to Caruso — caruso","text":"Data kindly supplied Tancredi Caruso","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset due to Caruso — caruso","text":"T. Caruso others 2007. “Berger-Parker index       effective tool monitoring biodiversity disturbed       soils: case study Mediterranean oribatid (Acari: Oribatida)       assemblages”. Biodiversity Conservation, 16:3277-3285 M. Migliorini, . Petrioli, F. Bernini 2002.       “Comparative analysis two edaphic zoocoenoses (Oribatid \tmites Carabid beetles) five habitats \t‘Pietraporciana’ ‘Lucciolabella’ Nature Reserves \t(Orcia Valley, central Italy)”.  Acta Oecologica, 23:361-374","code":""},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Dataset due to Caruso — caruso","text":"Executing optimal.params.sloss(caruso) return   useful output.  reason unknown.","code":""},{"path":"https://robinhankin.github.io/untb/reference/caruso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset due to Caruso — caruso","text":"","code":"data(caruso)  summary(count(caruso[,1])) #> Number of individuals: 10802  #> Number of species: 122  #> Number of singletons: 24  #> Most abundant species: Microppia_minus (1826 individuals) #> estimated theta:  19.17696"},{"path":"https://robinhankin.github.io/untb/reference/census.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct, coerce, and test for a census object — census","title":"Construct, coerce, and test for a census object — census","text":"package untb, ecosystem data held one two preferred forms: census data count data.  Function .census() coerces census format.","code":""},{"path":"https://robinhankin.github.io/untb/reference/census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct, coerce, and test for a census object — census","text":"","code":"census(a) as.census(a) is.census(a)"},{"path":"https://robinhankin.github.io/untb/reference/census.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct, coerce, and test for a census object — census","text":"Ecosystem data.  function .census(), table,     interpret species count data; otherwise, interpret census data","code":""},{"path":"https://robinhankin.github.io/untb/reference/census.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct, coerce, and test for a census object — census","text":"“census” object list individuals form   unnamed vector whose elements indicate individuals' species;   compare “count” objects. object class “census” also unordered factor.    levels always alphabetical order. Function census() takes object class “count”   returns object class “census”.  function   really intended end user. Function .census() coerces class “count”   returns census() result.","code":""},{"path":"https://robinhankin.github.io/untb/reference/census.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct, coerce, and test for a census object — census","text":"Returns object class “census”.","code":""},{"path":"https://robinhankin.github.io/untb/reference/census.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct, coerce, and test for a census object — census","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/census.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct, coerce, and test for a census object — census","text":"","code":"jj <- c(dogs=4,pigs=10,slugs=0,fish=1)  x <- census(jj)   # slugs appear as zero abundance extant(x)  # slugs gone #> pigs dogs fish  #>   10    4    1   x+x   # count method for census objects: order of elements lost #>  [1] pigs pigs pigs pigs pigs pigs pigs pigs pigs pigs pigs pigs pigs pigs pigs #> [16] pigs pigs pigs pigs pigs dogs dogs dogs dogs dogs dogs dogs dogs fish fish #> Levels: pigs dogs fish slugs   as.census(jj)  # probably NOT what you meant #> [1] 0  1  4  10 #> Levels: 0 1 4 10  a <- c(rep(\"oak\",5) ,rep(\"ash\",2),rep(\"elm\",3),rep(\"xx\",4)) # note that \"a\" is a plain vector here. as.census(a) #>  [1] oak oak oak oak oak xx  xx  xx  xx  elm elm elm ash ash #> Levels: oak xx elm ash"},{"path":"https://robinhankin.github.io/untb/reference/copepod.html","id":null,"dir":"Reference","previous_headings":"","what":"Copepod data supplied by Phil Pugh — copepod","title":"Copepod data supplied by Phil Pugh — copepod","text":"dataset copepod (resp: ostracod) abundances supplied Dr Phil   Pugh National Oceanography Centre, Southampton","code":""},{"path":"https://robinhankin.github.io/untb/reference/copepod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copepod data supplied by Phil Pugh — copepod","text":"","code":"data(copepod) data(ostracod)"},{"path":"https://robinhankin.github.io/untb/reference/copepod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Copepod data supplied by Phil Pugh — copepod","text":"table names different copepod (resp: ostracod) species,   entries corresponding numbers individuals   species.","code":""},{"path":"https://robinhankin.github.io/untb/reference/copepod.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Copepod data supplied by Phil Pugh — copepod","text":"Kindly supplied Southampton Oceanography Centre.","code":""},{"path":"https://robinhankin.github.io/untb/reference/copepod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copepod data supplied by Phil Pugh — copepod","text":"","code":"data(copepod) optimize(f=theta.likelihood,interval=c(10,100), maximum=TRUE, S=no.of.spp(copepod), J=no.of.ind(copepod), give.log=TRUE) #> $maximum #> [1] 34.72088 #>  #> $objective #> [1] -24553989 #>   data(ostracod) preston(ostracod) #>                   1  2  3-4  5-8  9-16  17-32  33-64  65-128  129-256  257-512 #> number of species  2 4    2    4     7      7      8       4        5        5 #>                    513-1024  1025-2048  2049-4096  4097-8192  8193-16384 #> number of species        17          7         14          7          15 #>                    16385-32768  32769-65536  65537-Inf #> number of species            8            9          4"},{"path":"https://robinhankin.github.io/untb/reference/count.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct, coerce, and test for a count object — count","title":"Construct, coerce, and test for a count object — count","text":"package untb, ecosystem data held one two preferred forms:   census data count data.  Function count creates object   class “count”, .count() coerces class.","code":""},{"path":"https://robinhankin.github.io/untb/reference/count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct, coerce, and test for a count object — count","text":"","code":"as.count(a,add=\"\") count(a) is.count(a)"},{"path":"https://robinhankin.github.io/untb/reference/count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct, coerce, and test for a count object — count","text":"Ecosystem data.  function .count(), table,     interpret species count data; otherwise, interpret census     data.  Special dispensation made single rows dataframe add function .count(), character argument     default \"\" (empty string) meaning leave species     names unchanged.  non-empty string prepended     species names using paste().  useful     species names integers display can become confusing","code":""},{"path":"https://robinhankin.github.io/untb/reference/count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct, coerce, and test for a count object — count","text":"“count” object list species together   abundance.  also class “table”; compare   “census” objects. object class “count” table sorted least   abundant species.  singletons thus tabulated last. Function count() takes vector, elements   interpreted abundances.  elements named,   names interpreted species names (unnamed elements given   null name).  vector unnamed, species names   upper case letters, first element named   “”, second “B”, ;   behaviour inherited .table().  Note means   species names necessarily alphabetical order.   version 1.6-9, zero elements interpreted zero abundance   species (ie extinct). access change species names, use names()   names<- respectively. Function .count() coerces argument count form.","code":""},{"path":"https://robinhankin.github.io/untb/reference/count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct, coerce, and test for a count object — count","text":"Returns object class “count”.","code":""},{"path":"https://robinhankin.github.io/untb/reference/count.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct, coerce, and test for a count object — count","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct, coerce, and test for a count object — count","text":"","code":"a <- c(rep(\"oak\",5) ,rep(\"ash\",2),rep(\"elm\",3),rep(\"xx\",4)) as.count(a) #> oak  xx elm ash  #>   5   4   3   2      data(saunders) as.count(saunders[1,-(1:150)]) #>            Exogoninae             Nematodes              Syllinae  #>                    27                    24                    20  #>            Nereididae            Eusyllinae            Nemerteans  #>                     6                     5                     5  #>          Protoaricia.            Sabellidae Spionidae...Boccardia  #>                     4                     4                     3   jj <- sample(1:5,5,replace=TRUE) as.count(jj) #> 4 5  #> 3 2  as.count(jj,add=\"spp.\") #> spp.4 spp.5  #>     3     2"},{"path":"https://robinhankin.github.io/untb/reference/display.untb.html","id":null,"dir":"Reference","previous_headings":"","what":"Animation of neutral ecological drift — display.untb","title":"Animation of neutral ecological drift — display.untb","text":"Displays ongoing simulation neutral ecological drift using nice colours simple animation technique.  work   intended RStudio: use base R","code":""},{"path":"https://robinhankin.github.io/untb/reference/display.untb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Animation of neutral ecological drift — display.untb","text":"","code":"display.untb(start, gens=100, prob.of.mutate = 0, cex=3, individually = TRUE, ask = FALSE, flash = FALSE, delay = 0, cols=NULL, ...)"},{"path":"https://robinhankin.github.io/untb/reference/display.untb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Animation of neutral ecological drift — display.untb","text":"start Starting ecosystem; coerced class census.  Usually,     pass object class count; see examples.  start     monoculture size 10, use start=rep(1,10)     start system maximal diversity (ie singletons), use     start=1:10 gens Number generations simulate prob..mutate Probability mutation.  default zero     corresponds \\(\\theta=0\\) means     ecosystem eventually become monoculture (particularly     instructive watch happen, especially starting     ecosystem maximal diversity\\(\\mbox{---}\\)warned,     can take long time, especially ecosystems large     number individuals).  Nonzero values mean nontrivial     dominance-diversity curve eventuate, although can take     long time happen.  Try nonzero value prob..mutate     monoculture start (use individually=FALSE     experiments) cex size dots used plotting, defaulting 3 individually Boolean, default TRUE meaning     timestep means death single individual     simultaneous birth new individual; FALSE meaning     timestep refers every individual system ask Boolean, default FALSE meaning display     generations autonomously, TRUE meaning wait     user hit “return” proceeding flash Boolean, TRUE meaning indicate site     death/birth flashing ring; default FALSE     meaning omit flashing ring.  Use TRUE pedagogic     purposes, possibly ask set TRUE, nonzero     delay. option kicks individually     TRUE delay Time delay generations seconds; meaningful     whatever value flash individually cols vector colours default NULL meaning     choose randomly.  Useful printing stills     movie ... arguments passed plot() points()","code":""},{"path":"https://robinhankin.github.io/untb/reference/display.untb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Animation of neutral ecological drift — display.untb","text":"S. P. Hubbell 2001.  “Unified Neutral Theory Biodiversity”.   Princeton University Press.","code":""},{"path":"https://robinhankin.github.io/untb/reference/display.untb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Animation of neutral ecological drift — display.untb","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/display.untb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animation of neutral ecological drift — display.untb","text":"","code":"data(butterflies) display.untb(start=butterflies,prob=0, gens=1e2)"},{"path":"https://robinhankin.github.io/untb/reference/etienne.html","id":null,"dir":"Reference","previous_headings":"","what":"Etienne's sampling formula — etienne","title":"Etienne's sampling formula — etienne","text":"Function etienne() returns probability given dataset   given theta m according Etienne's sampling   formula.  Function optimal.params() returns maximum likelihood   estimates theta m using numerical optimization","code":""},{"path":"https://robinhankin.github.io/untb/reference/etienne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Etienne's sampling formula — etienne","text":"","code":"etienne(theta, m, D, log.kda = NULL, give.log = TRUE, give.like = TRUE) optimal.params(D, log.kda = NULL, start = NULL, give = FALSE, ...)"},{"path":"https://robinhankin.github.io/untb/reference/etienne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Etienne's sampling formula — etienne","text":"theta Fundamental biodiversity parameter m Immigration probability D Dataset; count object log.kda KDA defined equation A11 Etienne 2005.     See details section give.log Boolean, default TRUE meaning return     logarithm value give.like Boolean, default TRUE meaning return     likelihood FALSE meaning return probability start function optimal.params(), start point     optimization routine \\((\\theta,m)\\). give function optimal.params(), Boolean,     TRUE meaning return output optimization     routine, default FALSE meaning return just point     estimate ... function optimal.params(), arguments     passed optim()","code":""},{"path":"https://robinhankin.github.io/untb/reference/etienne.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Etienne's sampling formula — etienne","text":"Function etienne() just Etienne's formula 6:   $$P[D|\\theta,m,J]=     \\frac{J!}{\\prod_{=1}^Sn_i\\prod_{j=1}^J{\\Phi_j}!}     \\frac{\\theta^S}{(\\theta)_J}\\times     \\sum_{=S}^J\\left(K(D,)        \\frac{(\\theta)_J}{(\\theta)_A}        \\frac{^}{()_J}        \\right)$$ \\(\\log K(D,)\\) given function logkda() (qv).  might useful know (trivial) identity Pochhammer symbol [written \\((z)_n\\)] documented theta.prob.Rd.  convenience, Etienne's Function optimal.params() uses optim() return maximum likelihood estimate \\(\\theta\\) \\(m\\). Compare function optimal.theta(), restricted dispersal limitation, ie \\(m=1\\). Argument log.kda optional: \\(K(D,)\\) defined equation A11 Etienne 2005; computationally expensive calculate.  supplied, functions documented calculate scratch: can save considerable amount time","code":""},{"path":"https://robinhankin.github.io/untb/reference/etienne.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Etienne's sampling formula — etienne","text":"R. S. Etienne 2005. “new sampling formula     biodiversity”.  Ecology letters 8:253-260","code":""},{"path":"https://robinhankin.github.io/untb/reference/etienne.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Etienne's sampling formula — etienne","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/etienne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Etienne's sampling formula — etienne","text":"","code":"data(butterflies) if (FALSE) optimal.params(butterflies) # \\dontrun{}  #takes too long without PARI/GP   #Now the one from Etienne 2005, supplementary online info:  zoo <- count(c(pigs=1, dogs=1, cats=2, frogs=3, bats=5, slugs=8)) l <- logkda.R(zoo, use.brob=TRUE)  # Use logkda() if pari/gp is available optimal.params(zoo, log.kda=l)  #compare his answer of 7.047958 and 0.22635923. #>     theta         m  #> 7.0577736 0.2261709"},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected abundances under the neutral model — expected.abundance","title":"Expected abundances under the neutral model — expected.abundance","text":"Returns vector expected abundances -th ranked species neutral model","code":""},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected abundances under the neutral model — expected.abundance","text":"","code":"expected.abundance(J, theta)"},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected abundances under the neutral model — expected.abundance","text":"J Size ecosystem theta Biodiversity parameter","code":""},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected abundances under the neutral model — expected.abundance","text":"Returns object class count.  Species names (capital   letters) assigned function count().","code":""},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Expected abundances under the neutral model — expected.abundance","text":"S. P. Hubbell 2001.  “Unified Neutral Theory Biodiversity”.   Princeton University Press.","code":""},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expected abundances under the neutral model — expected.abundance","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Expected abundances under the neutral model — expected.abundance","text":"Function slow even moderate J.","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/expected.abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected abundances under the neutral model — expected.abundance","text":"","code":"expected.abundance(J=10,theta=3) #>            A            B            C            D            E            F  #> 4.4711170860 2.2510808983 1.3637195617 0.8804978355 0.5808816964 0.3066629464  #>            G            H            I            J  #> 0.1140706169 0.0277780032 0.0039448052 0.0002465503   sum(expected.abundance(J=10,theta=3))  #should be 10 #> [1] 10"},{"path":"https://robinhankin.github.io/untb/reference/extractor.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract rows of a database in count form — extractor","title":"Extract rows of a database in count form — extractor","text":"Extracts rows data frame , one row , coerces   count object, preserving species names","code":""},{"path":"https://robinhankin.github.io/untb/reference/extractor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract rows of a database in count form — extractor","text":"","code":"extractor(x, index)"},{"path":"https://robinhankin.github.io/untb/reference/extractor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract rows of a database in count form — extractor","text":"x data frame column headings species names index vector indices extract","code":""},{"path":"https://robinhankin.github.io/untb/reference/extractor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract rows of a database in count form — extractor","text":"index length one, numbers interpreted species counts, output coerced count object.","code":""},{"path":"https://robinhankin.github.io/untb/reference/extractor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract rows of a database in count form — extractor","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/extractor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract rows of a database in count form — extractor","text":"","code":"data(saunders) plot(extant(extractor(saunders,1)))"},{"path":"https://robinhankin.github.io/untb/reference/fisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Various functionality to implement Fisher's logseries — fisher","title":"Various functionality to implement Fisher's logseries — fisher","text":"Various functions connected Fisher's logseries including creation synthetic datasets estimation Fisher's alpha","code":""},{"path":"https://robinhankin.github.io/untb/reference/fisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Various functionality to implement Fisher's logseries — fisher","text":"","code":"fishers.alpha(N, S, give=FALSE) fisher.ecosystem(N, S, nmax, alpha=NULL, c=0)"},{"path":"https://robinhankin.github.io/untb/reference/fisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Various functionality to implement Fisher's logseries — fisher","text":"N Size ecosystem.  case     fisher.ecosystem(), expected size ecosystem S Number species ecosystem alpha function fisher.ecosystem(), Fisher's     \\(\\alpha\\).   supplied, calculated     N S. give function fishers.alpha(), Boolean variable     default FALSE meaning return alpha, TRUE     meaning return list containing x alpha. nmax function fisher.ecosystem(), maximum number \tspecies abundance classes consider c function fisher.ecosystem(), rare species       advantage term","code":""},{"path":"https://robinhankin.github.io/untb/reference/fisher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Various functionality to implement Fisher's logseries — fisher","text":"Function fishers.alpha() solves \\(\\alpha\\) given   \\(N\\) \\(S\\), per Fisher's table 9, p55. Given \\(N\\) \\(S\\) (\\(\\alpha\\)), function   fisher.ecosystem() generates Fisherian ecosystem   expected size \\(N\\) expected species count \\(S\\).","code":""},{"path":"https://robinhankin.github.io/untb/reference/fisher.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Various functionality to implement Fisher's logseries — fisher","text":"R. . Fisher . S. Corbet C. B. Williams 1943. “relation number species number individuals random sample animal population”, Journal Animal Ecology, volume 12, pp 42–58","code":""},{"path":"https://robinhankin.github.io/untb/reference/fisher.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Various functionality to implement Fisher's logseries — fisher","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/fisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Various functionality to implement Fisher's logseries — fisher","text":"","code":"fishers.alpha(N=100000,S=100) #> [1] 10.96717 #compare the Table value:   100000/10^3.95991 #> [1] 10.96705"},{"path":"https://robinhankin.github.io/untb/reference/ghats.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree counts in 1-ha plots from the Western Ghats mountains (South India) — ghats","title":"Tree counts in 1-ha plots from the Western Ghats mountains (South India) — ghats","text":"Tree species counts given 50 one-hectare sampling plots (species sample matrix).  includes trees 10 cm dbh (diameter breast height) species labels (row names) numeric.","code":""},{"path":"https://robinhankin.github.io/untb/reference/ghats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree counts in 1-ha plots from the Western Ghats mountains (South India) — ghats","text":"","code":"data(ghats)"},{"path":"https://robinhankin.github.io/untb/reference/ghats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tree counts in 1-ha plots from the Western Ghats mountains (South India) — ghats","text":"Data frame displaying 304 species counts 50 one-hectare plots.","code":""},{"path":"https://robinhankin.github.io/untb/reference/ghats.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tree counts in 1-ha plots from the Western Ghats mountains (South India) — ghats","text":"Ecological Archives E088-149-A1.   http://www.esapubs.org/Archive/ecol/E088/149/appendix-.htm","code":""},{"path":"https://robinhankin.github.io/untb/reference/ghats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tree counts in 1-ha plots from the Western Ghats mountains (South India) — ghats","text":"Francois Munoz, Pierre Couteron, B. R. Ramesh, Rampal S. Etienne   2007.  “Estimating parameters neutral communities: one     single large several small samples.”  Ecology 88(10):2482-2488.","code":""},{"path":"https://robinhankin.github.io/untb/reference/ghats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tree counts in 1-ha plots from the Western Ghats mountains (South India) — ghats","text":"","code":"data(ghats) # Rank-abundance picture of plot 1 (column 1 in ghats) plot(extant(count(ghats[,1])))   #histogram of optimal theta across the 50 plots: hist(apply(ghats,2,optimal.theta),col='gray')"},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomly select a subset of an ecosystem — isolate","title":"Randomly select a subset of an ecosystem — isolate","text":"Return ecosystem comprised individuals randomly sampled   metacommunity","code":""},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomly select a subset of an ecosystem — isolate","text":"","code":"isolate(a, size = no.of.ind(a), replace = TRUE)"},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomly select a subset of an ecosystem — isolate","text":"Ecosystem data size Number individuals sample replace Boolean, default TRUE meaning     sample individuals metacommunity replacement     FALSE meaning sample without replacement.  See details     section","code":""},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Randomly select a subset of an ecosystem — isolate","text":"Setting argument replace default TRUE much faster. canonical example given Leigh et al 1993, islands isolated mainland rising waters.  trees islands held randomly drawn sample metacommunity. Given usual usage function generate plausible ecosystem scenario, one hard time justifying use replace=TRUE allows (example) singleton metacommunity species multiple representatives returned ecosystem. However, large metacommunities small subsamples, distinction replace=TRUE replace=FALSE small.","code":""},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomly select a subset of an ecosystem — isolate","text":"Returns count object","code":""},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Randomly select a subset of an ecosystem — isolate","text":"E. G. Leigh others 1993. “decline tree     diversity newly isolated tropical islands: test null     hypothesis implications”.  Evolutionary Ecology, 7:76-102","code":""},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Randomly select a subset of an ecosystem — isolate","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Randomly select a subset of an ecosystem — isolate","text":"replace=FALSE, returned count object includes extinct species.  Use extant(isolate(...)) return extant species","code":""},{"path":"https://robinhankin.github.io/untb/reference/isolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomly select a subset of an ecosystem — isolate","text":"","code":"a <- rand.neutral(1000,10) no.of.spp(a) #> [1] 52 no.of.spp(isolate(a)) #> [1] 46"},{"path":"https://robinhankin.github.io/untb/reference/logS1.html","id":null,"dir":"Reference","previous_headings":"","what":"logarithms of Stirling numbers of the first kind — logS1","title":"logarithms of Stirling numbers of the first kind — logS1","text":"Natural logarithms Stirling numbers first kind, used function logkda.a11() (dataset logS1) function logkda.polyn() (dataset logS1vect).","code":""},{"path":"https://robinhankin.github.io/untb/reference/logS1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logarithms of Stirling numbers of the first kind — logS1","text":"","code":"logS1"},{"path":"https://robinhankin.github.io/untb/reference/logS1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"logarithms of Stirling numbers of the first kind — logS1","text":"Dataset logS1 100--100 matrix logs Stirling numbers first kind; logS1vect vector length 499500","code":""},{"path":"https://robinhankin.github.io/untb/reference/logS1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"logarithms of Stirling numbers of the first kind — logS1","text":"Calculated Maple","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/logS1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logarithms of Stirling numbers of the first kind — logS1","text":"","code":"exp(logS1[1:5,1:5]) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    1    0    0    0 #> [3,]    2    3    1    0    0 #> [4,]    6   11    6    1    0 #> [5,]   24   50   35   10    1"},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":null,"dir":"Reference","previous_headings":"","what":"Etienne's K(D,A) — logkda","title":"Etienne's K(D,A) — logkda","text":"Calculates Etienne's \\(K(D,)\\) using variety different methods","code":""},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Etienne's K(D,A) — logkda","text":"","code":"logkda.R(a, use.brob=TRUE) logkda.a11(a) logkda.pari(a, numerical=TRUE, gp_binary = \"gp\") logkda.polyn(a) logkda(a, method=\"pari\", ...) logkda_pari_unix(a, numerical, pari_string, gp_binary) logkda_pari_windows(a, numerical, pari_string)"},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Etienne's K(D,A) — logkda","text":"Count object use.brob function logkda.R(), Boolean, default     TRUE meaning use Brobdingnagian numbers     calculation.  slower allows one analyze larger     datasets numerical Boolean, default TRUE meaning coerce     numerical vector (thereby losing precision), FALSE     meaning return string produced pari/gp method function logkda(), string specifying     method use.  Takes “R”, “a11”, “pari” pari_string,gp_binary configuration variables (intended     changed user) ... function logkda(), arguments     passed functions","code":""},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Etienne's K(D,A) — logkda","text":"user use function logkda(), wrapper   functions.  Note default method, pari,   requires pari/gp system installed.  preferred   option much faster methods. Functions logkda.R() logkda.pari() calculate   \\(K(D,)\\) using method appearing Etienne (2005), supplementary   online material; use R pari/gp respectively.   Function logkda.a11 direct implementation formula A11   Etienne (2005).  formula $$   K(D,)=   \\sum_{\\left\\{a_1,\\ldots,a_S|\\sum a_i=\\right\\}}   \\prod_{=1}^S\\frac{     \\overline{s}\\left(n_i, a_i\\right)     \\overline{s}\\left(a_i,   1\\right) }{   \\overline{s}\\left(n_i,1\\right)}$$    \\(\\overline{s}\\left(n_i,a_i\\right)\\) Stirling numbers    first kind (see logS1). Function logkda.pari() dispatches either logkda_pari_unix() logkda_pari_windows() windows function guaranteed work.","code":""},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Etienne's K(D,A) — logkda","text":"R. S. Etienne 2005. “New Sampling Formula Neutral Biodiversity”.  Ecology Letters, volume 8, pp253–260. doi: 10.111/j.1461-0248.2004.00717.x C. Batut K. Belabas D. Bernardi H. Cohen M. Olivier 2000.  “User's guide PARI/GP”.  http://www.parigp-home.de/","code":""},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Etienne's K(D,A) — logkda","text":"Robin K. S. Hankin; logkda() R transliteration   pari/gp code appearing Etienne 2005 (supplementary online   material) due Chave. Function logkda.polyn() provided Francois Munoz. Function .logkda.pari.windows() provided Andrea Manica   Francois Munoz.","code":""},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Etienne's K(D,A) — logkda","text":"method takes default value “pari”,   pari/gp installed (test gp --version),   method changed R warning given. Function logkda.a11() included computational   method direct transcription formula A11; slow. Function logkda.pari() wrapper   .logkda.pari.windows() .logkda.pari.unix().  uses   “(R.Version()$os == 'windows')” check windows   operating systems. nice use gp2c (rather gp)   make “-g” flag work properly;   hack gp2c-run make call gp -q   flag","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/logkda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Etienne's K(D,A) — logkda","text":"","code":"a <- count(c(dogs=7,pigs=3,crabs=1,hogs=1,slugs=1))  if (FALSE) logkda(a) # \\dontrun{}  logkda.R(a) #> [1] 0.000000 1.373716 2.217693 2.730572 2.972051 2.910991 2.491827 1.609438 #> [9] 0.000000 logkda.R(a, use.brob=FALSE) #> [1] 0.000000 1.373716 2.217693 2.730572 2.972051 2.910991 2.491827 1.609438 #> [9] 0.000000 logkda.a11(a) #> [1] 0.000000 1.373716 2.217693 2.730572 2.972051 2.910991 2.491827 1.609438 #> [9] 0.000000 # All four should be the same up to numerical errors"},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecosystem diagnostics — no.of.ind","title":"Ecosystem diagnostics — no.of.ind","text":"Ecosystem diagnostics species count, individual count, number singletons, etc","code":""},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ecosystem diagnostics — no.of.ind","text":"","code":"no.of.ind(x) no.of.spp(x, include.extinct=FALSE) no.of.singletons(x) no.of.extinct(x) maximal.abundance(x) singletons(x) extinct(x) extant(x)"},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ecosystem diagnostics — no.of.ind","text":"x Ecosystem vector; coerced class count include.extinct function ..spp(), Boolean     argument TRUE meaning include extinct species (ie     species abundance zero), default FALSE     meaning return number extant species","code":""},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ecosystem diagnostics — no.of.ind","text":"Function ..spp() returns number species     ecosystem object, treating extinct species line argument     include.extinct Function ..ind() returns number individuals Function ..singletons() returns number singletons Function ..extinct() returns number extinct species Function maximal.abundance() returns abundance     abundant species Function singletons() returns count object containing     singletons: abundance one Function extinct() returns count object containing     extinct species: abundance zero Function extant() returns count object containing     extant species: abundance greater zero","code":""},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ecosystem diagnostics — no.of.ind","text":"S. P. Hubbell.  “Unified Neutral Theory Biodiversity”.   Princeton University Press, 2001.","code":""},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ecosystem diagnostics — no.of.ind","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Ecosystem diagnostics — no.of.ind","text":"sometimes useful include species abundance   zero , example, taking single row Saunders dataframe. default include.extinct FALSE   required (eg) optimal.theta()","code":""},{"path":"https://robinhankin.github.io/untb/reference/no.of.ind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ecosystem diagnostics — no.of.ind","text":"","code":"data(butterflies) no.of.spp(butterflies) #> [1] 37 no.of.ind(butterflies) #> [1] 376  jj1 <- count(c(dogs=7,pigs=3,crabs=0,slugs=1)) jj2 <- count(c(squid=0,dogs=3,bugs=0)) jj3 <- count(c(bugs=3,rats=0,crabs=3,cats=0))  extinct(jj1 + jj2)  #>  bugs crabs squid  #>     0     0     0  extinct(jj3)               #rats and cats #> rats cats  #>    0    0  extant(jj3)                #bugs and crabs #>  bugs crabs  #>     3     3   singletons(jj1) #> slugs  #>     1  singletons(jj2)           # empty  #> character(0) singletons(jj1 + jj3)     # slugs #> slugs  #>     1"},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.gst.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","title":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","text":"Functions optimal.params.gst(), GST.k() .k()   apply count data collected network community samples k   (species sample matrix).  theoretical relationship   GST(k) statistics local immigration numbers (k),   context spatially-implicit neutral community model (Munoz et   al 2008), used provide GST(k) (k) statistics   sample k. requested, optimal.params.gst() provides user   confidence bounds.","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.gst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","text":"","code":"optimal.params.gst(D, exact = TRUE, ci = FALSE, cint = c(0.025, 0.975), nbres = 100) GST.k(D, exact = TRUE) I.k(D, exact = TRUE)"},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.gst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","text":"D data table including species counts network     community samples (columns) exact TRUE, exact similarity statistics   calculated (sampling without replacement) , false, approximate   statistics (sampling replacement) considered (see Munoz et al   2008 statistical discussion) ci Specifies whether bootstraps confidence intervals     immigration estimates calculated cint Bounds confidence interval, ci = TRUE nbres Number rounds bootstrap procedure     confidence interval calculation, ci = T","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.gst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","text":"GST vector 0 1 GST(k) numbers (specific output GST.k) nk Number individuals within samples (length = number samples) distrib Species counts merged dataset (output GST.k .k) Immigration estimates (output .k optimal.params.gst) m Corresponding immigration rates (output .k     optimal.params.gst).  Specific outputs optimal.params.gst ci = T (bootstrap procedure) Ici Confidence interval (k) mci Confidence interval m(k) Iboot Table bootstrapped values (k) mboot Table bootstrapped values im(k)","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.gst.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","text":"Francois Munoz, Pierre Couteron B.R. Ramesh     (2008). “Beta-diversity spatially implicit neutral models:     new way assess species migration.” American     Naturalist 172(1): 116-127","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.gst.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","text":"Francois Munoz","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.gst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of local immigration using GST(k) statistics — optimal.params.gst","text":"","code":"data(ghats) optimal.params.gst(ghats) #> $I #>  [1] 16.774694 12.915263 18.654831  8.420867  8.638719  7.334220 23.669878 #>  [8] 10.362868 12.024855 19.147550 12.596480  8.274654 11.324572  4.841787 #> [15] 34.973891 10.915280 28.603709 11.719364 18.204995 16.323013 27.496478 #> [22] 27.646331  3.826457  1.323756  7.927096 14.818397 26.328859 10.753630 #> [29] 29.014992 14.957210  8.205501  8.468848  8.681752 13.086981 17.554385 #> [36]  4.362208 17.625929 16.267331 10.960310  9.976792  9.353981 13.502007 #> [43]  4.643317  2.569371 13.644226 34.402876 16.861746 12.533388 17.380008 #> [50] 25.281964 #>  #> $m #>  [1] 0.072688619 0.046808801 0.040061500 0.037690602 0.021890195 0.012036449 #>  [7] 0.070726047 0.028677179 0.034953449 0.034741242 0.035324184 0.027835046 #> [13] 0.077393510 0.011989317 0.084687899 0.023477997 0.113235506 0.049717443 #> [19] 0.080837440 0.072122640 0.114809530 0.103681647 0.009359611 0.003800362 #> [25] 0.030733862 0.125773200 0.040610345 0.024070605 0.092106701 0.043997332 #> [31] 0.009290590 0.017626217 0.030821139 0.070707194 0.099427637 0.007414154 #> [37] 0.027090726 0.031087992 0.016071772 0.013537457 0.014910212 0.023139607 #> [43] 0.008179990 0.003683320 0.047934314 0.096799654 0.044861564 0.025343866 #> [49] 0.044181218 0.054927123 #>"},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"Function optimal.params.sloss() returns maximum likelihood   estimates theta m(k) using numerical   optimization. differs untb's optimal.params() function   applies network smaller community samples k instead   single large community sample. Although single, common theta communities,   immigration estimates provided local community k,   sharing biogeographical background.","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"","code":"optimal.params.sloss(D, nbres = 100, ci = FALSE, cint = c(0.025, 0.975))"},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"D Species counts network community samples (species sample table) nbres Number resampling rounds theta estimation ci Specifies whether bootstraps confidence intervals provided estimates cint Bounds confidence intervals, ci = T","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"theta Mean theta estimate vector estimated immigration numbers (k) Output bootstrap procedure, ci = T: thetaci Confidence interval theta msampleci Confidence intervals m(k) thetasamp theta estimates provided resampling procedure Iboot Bootstrapped values (k) mboot Bootstrapped values m(k)","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"Francois Munoz, Pierre Couteron, B. R. Ramesh, Rampal S. Etienne   2007. “Estimating parameters neutral communities: one   single large several small samples”. Ecology   88(10):2482-2488","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"Francois Munoz","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"function returns unhelpful output run   caruso dataset optimal.params.sloss(caruso).    reason behaviour unknown.","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/optimal.params.sloss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of neutral community parameters using a two-stage maximum-likelihood procedure — optimal.params.sloss","text":"","code":"data(ghats) optimal.params.sloss(ghats) #> $theta #> [1] 53.62875 #>  #> $m #>  [1] 0.010177470 0.012216350 0.015685478 0.011830555 0.014240947 0.016768434 #>  [7] 0.015352210 0.012180953 0.015387777 0.015619090 0.013257703 0.010223119 #> [13] 0.006488277 0.009335648 0.016764041 0.014578575 0.012195604 0.009212344 #> [19] 0.009267170 0.012063813 0.012263035 0.011362638 0.014141649 0.005551203 #> [25] 0.012033473 0.007293550 0.022733042 0.015638402 0.012409440 0.011432190 #> [31] 0.018951753 0.017521335 0.011116481 0.006505776 0.009218522 0.012530580 #> [37] 0.020189267 0.014795946 0.019090552 0.018458212 0.015547909 0.017887769 #> [43] 0.012130589 0.013155617 0.010273853 0.014666531 0.012509133 0.015756999 #> [49] 0.012496094 0.018181228 #>  #> $I #>  [1]  2.2003728  3.2526354  7.1231383  2.5740214  5.5764189 10.2667549 #>  [7]  4.8489799  4.3282366  5.1885828  8.4411998  4.6219260  2.9849974 #> [13]  0.8816377  3.7600257  6.4448490  6.7165913  2.7655427  2.0827522 #> [19]  1.9362478  2.5643365  2.6320403  2.7468823  5.8095239  1.9370203 #> [25]  3.0450102  0.7567551 14.4688736  6.9266651  3.5936955  3.7584287 #> [31] 16.9031275  8.4175569  3.0689149  1.1263211  1.4793828  7.4107195 #> [37] 13.0431377  7.6142041 13.0590650 13.6714708  9.7603611 10.3817342 #> [43]  6.9133849  9.2650415  2.8131156  4.7780337  4.5476662  7.7164620 #> [49]  4.7579876  8.0552892 #>"},{"path":"https://robinhankin.github.io/untb/reference/optimal.prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns an estimate of the fundamental biodiversity number — optimal.prob","title":"Returns an estimate of the fundamental biodiversity number — optimal.prob","text":"Returns maximum likelihood estimate fundamental biodiversity number \\(\\theta\\) (function optimal.theta()) probability mutation (function optimal.prob()) optionally return information likely error","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns an estimate of the fundamental biodiversity number — optimal.prob","text":"","code":"optimal.prob(x,  interval=NULL, N=NULL, like=NULL, ...) optimal.theta(x, interval=NULL, N=NULL, like=NULL, ...)"},{"path":"https://robinhankin.github.io/untb/reference/optimal.prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns an estimate of the fundamental biodiversity number — optimal.prob","text":"x Ecosystem vector species count table interval Bracketing interval probability mutation     passed optimization routine (optimize()).     Default NULL means use wide interval.  Note     argument interpreted interval \\(\\theta\\)     optimal.prob() optimal.theta(). N Integer; number parametric resampled estimates     give.  Default NULL means return just maximum     likelihood estimate like Units likelihood calculate credible interval.     Edwards recommends using 2 ... arguments passed optimize()","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.prob.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Returns an estimate of the fundamental biodiversity number — optimal.prob","text":"fundamental biodiversity parameter \\(\\theta\\)   \\(2\\nu J\\), \\(\\nu\\) probability   mutation (ie, estimated optimal.prob()), \\(J\\)   size ecosystem. general case dispersal limitation, see functions   etienne() optimal.params().","code":""},{"path":"https://robinhankin.github.io/untb/reference/optimal.prob.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns an estimate of the fundamental biodiversity number — optimal.prob","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/optimal.prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns an estimate of the fundamental biodiversity number — optimal.prob","text":"","code":"data(butterflies) optimal.prob(butterflies) #> [1] 0.01328401 optimal.theta(butterflies) #> [1] 9.989579"},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":null,"dir":"Reference","previous_headings":"","what":"Hubbell's phi — phi","title":"Hubbell's phi — phi","text":"Hubbell's phi: counts species abundances","code":""},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hubbell's phi — phi","text":"","code":"phi(x,addnames=TRUE) unphi(freq, string=\"spp\")"},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hubbell's phi — phi","text":"x Ecosystem vector; coerced class count addnames Boolean default     TRUE meaning set name \\(\\)th element     species abundance \\(\\) unique.  Set     FALSE suppress , useful species names     long freq Frequency data (eg returned phi()) string Character; species name prepend (using NULL     can confusing)","code":""},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hubbell's phi — phi","text":"Function phi() coerces argument count object   default returns named vector whose \\(\\)th element   number species \\(\\) individuals.  name   \\(\\)th element species abundance \\(\\) unique   empty otherwise.  Function phi() used   theta.prob(). Function unphi() reverse: given output   phi(), returns corresponding count object.  Note   species names lost.","code":""},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hubbell's phi — phi","text":"S. P. Hubbell 2001.  “Unified Neutral Theory Biodiversity”.   Princeton University Press.","code":""},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hubbell's phi — phi","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Hubbell's phi — phi","text":"code setting names dog's breakfast","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/phi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hubbell's phi — phi","text":"","code":"jj <- c(rep(\"oak\",5) ,rep(\"ash\",2),rep(\"elm\",3),\"pine\",\"tea\",\"yew\") a <- as.count(jj)  phi(a) #>     oak elm     ash  #>   3   1   1   0   1  unphi(phi(a))   #should match 'a' except for species names (which are lost) #> spp6 spp5 spp4 spp1 spp2 spp3  #>    5    3    2    1    1    1   data(butterflies) phi(butterflies,add=FALSE) #>  [1] 10  5  6  1  2  2  0  1  1  0  0  0  0  0  0  0  0  0  1  2  1  0  0  1  0 #> [26]  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  1  0  0  0 #> [51]  0  0  2  summary(unphi(phi(butterflies)))  #should match 'summary(butterflies)' #> Number of individuals: 376  #> Number of species: 37  #> Number of singletons: 10  #> Most abundant species: spp36 (53 individuals) #> estimated theta:  9.989579"},{"path":"https://robinhankin.github.io/untb/reference/plot.count.html","id":null,"dir":"Reference","previous_headings":"","what":"Abundance curves — plot.count","title":"Abundance curves — plot.count","text":"Plot ranked abundance curve","code":""},{"path":"https://robinhankin.github.io/untb/reference/plot.count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abundance curves — plot.count","text":"","code":"# S3 method for class 'count' plot(x, uncertainty = FALSE, expectation = FALSE, theta = NULL, n = 10, ...) # S3 method for class 'census' plot(x, uncertainty = FALSE, expectation = FALSE, theta = NULL, n = 10, ...)"},{"path":"https://robinhankin.github.io/untb/reference/plot.count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abundance curves — plot.count","text":"x Ecosystem object, coerced class count uncertainty Boolean,     TRUE meaning show bootstrapped estimates     species diversity curve, default FALSE meaning omit     expectation Boolean,     TRUE meaning plot expected abundances, default FALSE     meaning plot .  Warning option takes     loooong time run, even moderate values \\(J\\) theta Fundamental biodiversity number used argument     uncertainty expectation TRUE.  Default     value NULL means use maximum likelihood estimate     returned function optimal.theta() n Number bootstrapped estimates plot ... Extra parameters passed untb()","code":""},{"path":"https://robinhankin.github.io/untb/reference/plot.count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abundance curves — plot.count","text":"Plots ranked abundance curve, optionally parametrically resampled datasets showing uncertainties","code":""},{"path":"https://robinhankin.github.io/untb/reference/plot.count.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Abundance curves — plot.count","text":"using expectation, usually necessary set ylim possibly xlim manually.","code":""},{"path":"https://robinhankin.github.io/untb/reference/plot.count.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abundance curves — plot.count","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/plot.count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abundance curves — plot.count","text":"","code":"data(copepod) plot(copepod)   data(butterflies) plot(butterflies,uncertainty=TRUE)   x <- count(c(pigs=1, dogs=1, cats=2, frogs=3, bats=5, slugs=8)) plot(x,expectation=TRUE,ylim=c(0.5,10))"},{"path":"https://robinhankin.github.io/untb/reference/plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Add two count objects — +.count","title":"Add two count objects — +.count","text":"Adds two count objects","code":""},{"path":"https://robinhankin.github.io/untb/reference/plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add two count objects — +.count","text":"","code":"# S3 method for class 'count' a + b # S3 method for class 'census' a + b"},{"path":"https://robinhankin.github.io/untb/reference/plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add two count objects — +.count","text":",b objects class count","code":""},{"path":"https://robinhankin.github.io/untb/reference/plus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add two count objects — +.count","text":"Consider count objects b.  +b   count object records number species   b combined.  though organisms surveys   pooled. Census objects coerced count objects, added, result   coerced count object. operation commutative associative.","code":""},{"path":"https://robinhankin.github.io/untb/reference/plus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add two count objects — +.count","text":"Robin K. S. Hankin, based R-help tip Gabor Grothendiek","code":""},{"path":"https://robinhankin.github.io/untb/reference/plus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add two count objects — +.count","text":"","code":"a <- count(c(dogs=4,pigs=0,slugs=5)) b <- count(c(slugs=4,hogs=1,frogs=19))  a+b #> frogs slugs  dogs  hogs  pigs  #>    19     9     4     1     0"},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":null,"dir":"Reference","previous_headings":"","what":"Preston diagram of an ecosystem — preston","title":"Preston diagram of an ecosystem — preston","text":"Gives standard Preston diagram ecosystem.","code":""},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preston diagram of an ecosystem — preston","text":"","code":"preston(x,n=NULL,original=FALSE)"},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preston diagram of an ecosystem — preston","text":"x Ecosystem vector coerced class count,     matrix whose rows species counts n integer specifying number species abundance classes     use, default NULL meaning use     \\(1+\\log_2(J)\\).  Must greater 1 specified.     x vector, NULL acceptable     program try guess required original Boolean, default FALSE meaning use     nonoverlapping technique discussed , TRUE     meaning use Preston's original formulation.","code":""},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preston diagram of an ecosystem — preston","text":"Preston diagram table showing number species   abundances specified abundance classes.  Consider following   Preston diagram, created original = FALSE: shows 10 species abundance 1 (, singletons); 5 species abundance 2; 7 species abundance 3-4; 5 species abundance 5-8, .  method used Hubbell (2001), Chisholm Burgman (2004). Setting argument original TRUE means follow Preston (1948) count species abundance boundary two adjacent abundance classes split 50-50 classes. Thus fourth class \\(\\phi_4/2+\\phi_5+\\phi_6+\\phi_7+\\phi_8/2\\) \\(\\phi_i\\) number species abundance \\(\\) (given phi(x)).","code":"1  2  3-4  5-8  9-16  17-32  33-64  65-Inf number of species 10 5    7    5     1      5      4       0"},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preston diagram of an ecosystem — preston","text":"Function preston() returns object class “preston”.","code":""},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Preston diagram of an ecosystem — preston","text":"F. W. Preston 1948. “Commonness, Rarity, Species”.     Ecology 29(3):254-283 R. . Chisholm M. . Burgman 2004. “unified neutral       theory biodiversity biogeography: comment”.  Ecology 85(11):     3172-3174 S. P. Hubbell 2001.  “Unified Neutral Theory Biodiversity”.     Princeton University Press","code":""},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Preston diagram of an ecosystem — preston","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/preston.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preston diagram of an ecosystem — preston","text":"","code":"preston(untb(start=rep(1,100), prob=0.01, gens=1000, keep=FALSE)) #>                   1  2  3-4  5-8  9-16  17-32  33-64  65-Inf #> number of species  1 0    1    0     1      0      0       1  data(butterflies) preston(butterflies) #>                   1  2  3-4  5-8  9-16  17-32  33-Inf #> number of species 10 5    7    5     1      5       4 preston(butterflies,original=TRUE) #>                   1   2 4 8  16 32 64 #> number of species 5 7.5 9 5 1.5  5  4  data(copepod) preston(copepod) #>                   1  2  3-4  5-8  9-16  17-32  33-64  65-128  129-256  257-512 #> number of species 10 3    4   34    26     31     38      37       34       25 #>                    513-1024  1025-2048  2049-4096  4097-8192  8193-16384 #> number of species        30         25         26         14          13 #>                    16385-32768  32769-65536  65537-131072  131073-262144 #> number of species           15           11             1              0 #>                    262145-Inf #> number of species           1 plot(preston(copepod))"},{"path":"https://robinhankin.github.io/untb/reference/print.preston.html","id":null,"dir":"Reference","previous_headings":"","what":"Print and plot objects of class Preston — print.preston","title":"Print and plot objects of class Preston — print.preston","text":"Print plot objects class Preston","code":""},{"path":"https://robinhankin.github.io/untb/reference/print.preston.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print and plot objects of class Preston — print.preston","text":"","code":"# S3 method for class 'preston' print(x, ...) # S3 method for class 'preston' plot(x, ...)"},{"path":"https://robinhankin.github.io/untb/reference/print.preston.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print and plot objects of class Preston — print.preston","text":"x Object class “preston” ... arguments passed print() class     reset","code":""},{"path":"https://robinhankin.github.io/untb/reference/print.preston.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print and plot objects of class Preston — print.preston","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/print.preston.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Print and plot objects of class Preston — print.preston","text":"Intended work output function preston(). See vignette annotate Preston plot.","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/print.preston.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print and plot objects of class Preston — print.preston","text":"","code":"data(butterflies) print(preston(butterflies)) #>                   1  2  3-4  5-8  9-16  17-32  33-Inf #> number of species 10 5    7    5     1      5       4"},{"path":"https://robinhankin.github.io/untb/reference/print.summary.count.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for summary objects — print.summary.count","title":"Print method for summary objects — print.summary.count","text":"Print method summary objects","code":""},{"path":"https://robinhankin.github.io/untb/reference/print.summary.count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for summary objects — print.summary.count","text":"","code":"# S3 method for class 'summary.count' print(x, ...)"},{"path":"https://robinhankin.github.io/untb/reference/print.summary.count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for summary objects — print.summary.count","text":"x Object class “summary.count” ... extra arguments, currently ignored","code":""},{"path":"https://robinhankin.github.io/untb/reference/print.summary.count.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print method for summary objects — print.summary.count","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/print.summary.count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for summary objects — print.summary.count","text":"","code":"data(butterflies) summary(butterflies) #> Number of individuals: 376  #> Number of species: 37  #> Number of singletons: 10  #> Most abundant species: Little Sulphur (53 individuals) #> estimated theta:  9.989579"},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":null,"dir":"Reference","previous_headings":"","what":"Random neutral ecosystem — rand.neutral","title":"Random neutral ecosystem — rand.neutral","text":"Given size metacommunity \\(J\\), fundamental biodiversity number \\(\\theta\\), generate object class count using stochastic mechanism consistent neutral theory.","code":""},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random neutral ecosystem — rand.neutral","text":"","code":"rand.neutral(J, theta=NULL, prob.of.mutate=NULL, string = NULL, pad = FALSE)"},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random neutral ecosystem — rand.neutral","text":"J Size metacommunity theta Fundamental biodiversity number \\(\\theta\\).     User must supply exactly one theta     prob..mutate. prob..mutate Probability mutation \\(\\nu\\):     \\(\\theta=2J\\nu\\). string String add species names.  default (ie     string NULL), species named “1”,     “2”,\\(\\ldots\\).   Argument string supplies     prefix species names; good one use     “spp.”.  argument useful printing     count object can confusing species names     integers. pad Boolean, default FALSE meaning return     count object extant species, TRUE     meaning pad count extinct species J species.     Use vector length J required consistently     (see examples section).","code":""},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random neutral ecosystem — rand.neutral","text":"Uses simulation method page 289 Hubbell (2001).","code":""},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Random neutral ecosystem — rand.neutral","text":"pad TRUE, set string   “extinct”, things break.","code":""},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Random neutral ecosystem — rand.neutral","text":"S. P. Hubbell 2001.  “Unified Neutral Theory Biodiversity”.   Princeton University Press.","code":""},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Random neutral ecosystem — rand.neutral","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/rand.neutral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random neutral ecosystem — rand.neutral","text":"","code":"rand.neutral(1000, 9) #>   2   4  10  16   6   8   1  11  12  18   7  14  25   9   5  13  26  20  17  19  #> 185 170  95  78  55  54  46  46  35  28  23  20  20  18  15  15  15  14  10   9  #>  15  24  29  23  27  34   3  21  28  30  37  22  31  32  33  35  36  38  39  #>   7   6   6   5   4   3   2   2   2   2   2   1   1   1   1   1   1   1   1  rand.neutral(1000, 9, string=\"spp.\") #>  spp.6  spp.3  spp.1  spp.7 spp.19 spp.13 spp.11 spp.18  spp.9 spp.22  spp.5  #>    306    285    138     32     24     21     20     20     18     16     15  #>  spp.8 spp.12 spp.10  spp.4 spp.20 spp.16 spp.21 spp.15 spp.23 spp.26 spp.27  #>     15     12     10     10      8      7      6      4      4      4      4  #> spp.17  spp.2 spp.24 spp.25 spp.34 spp.35 spp.14 spp.28 spp.29 spp.30 spp.31  #>      2      2      2      2      2      2      1      1      1      1      1  #> spp.32 spp.33 spp.36 spp.37  #>      1      1      1      1   data(butterflies) rand.neutral(no.of.ind(butterflies), optimal.theta(butterflies),string=\"spp.\") #>  spp.3  spp.5  spp.1  spp.4  spp.6 spp.13 spp.16 spp.24 spp.14  spp.8 spp.11  #>     68     55     40     27     21     20     16     16     13     10      9  #> spp.20 spp.19 spp.23 spp.15 spp.10 spp.12 spp.22 spp.17 spp.25 spp.28 spp.30  #>      9      8      7      6      5      5      5      4      4      4      4  #>  spp.2  spp.9 spp.29  spp.7 spp.18 spp.21 spp.26 spp.27 spp.31 spp.32 spp.33  #>      3      3      2      2      1      1      1      1      1      1      1  #> spp.34 spp.35 spp.36  #>      1      1      1    # what is the distribution of abundance of the second ranked species if # J=10, theta=0.7? plot(table(replicate(100,rand.neutral(10,theta=0.7,pad=TRUE)[2])))"},{"path":"https://robinhankin.github.io/untb/reference/sahfos.html","id":null,"dir":"Reference","previous_headings":"","what":"Biodiversity dataset provided by SAHFOS — sahfos","title":"Biodiversity dataset provided by SAHFOS — sahfos","text":"Species counts North Atlantic","code":""},{"path":"https://robinhankin.github.io/untb/reference/sahfos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biodiversity dataset provided by SAHFOS — sahfos","text":"","code":"data(sahfos)"},{"path":"https://robinhankin.github.io/untb/reference/sahfos.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Biodiversity dataset provided by SAHFOS — sahfos","text":"Warner AJ Hays GC 1994.  “Sampling Continuous     Plankton Recorder Survey”. Progress Oceanography, 34:     237-256","code":""},{"path":"https://robinhankin.github.io/untb/reference/sahfos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biodiversity dataset provided by SAHFOS — sahfos","text":"","code":"data(sahfos) preston(sahfos) #>                   1  2  3-4  5-8  9-16  17-32  33-64  65-128  129-256  257-512 #> number of species 10 2    2    2     3      1      4       1        3        5 #>                    513-1024  1025-2048  2049-4096  4097-8192  8193-16384 #> number of species         2          5          3          1           5 #>                    16385-32768  32769-65536  65537-131072  131073-Inf #> number of species            2            2             0           1"},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset due to Saunders — saunders","title":"Dataset due to Saunders — saunders","text":"dataframe showing species inventories kelp holdfast   (saunders) including Boolean flag indicating whether   holdfast sheltered exposed location. Also two data frames, one 20 exposed holdfasts   (saunders.exposed) one 20 sheltered holdfasts   (saunders.sheltered). Also three count objects, giving counts organisms   (saunders.tot), exposed locations   (saunders.exposed.tot), sheltered locations   (saunders.sheltered.tot).","code":""},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset due to Saunders — saunders","text":"","code":"data(saunders)"},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset due to Saunders — saunders","text":"Dataset saunders dataframe 40 observations 177   variables.  row corresponds holdfast.  first column   Boolean, indicating whether holdfast exposed   (TRUE) sheltered (FALSE).  columns show   species abundances 176 species. Summary datasets saunders.sheltered.tot,   saunders.exposed.tot, saunders.tot objects   class count species abundance sheltered   holdfasts, exposed holdfasts, entire dataset. user probably interested saunders.sheltered   saunders.exposed, transpose   appropriate rows saunders.  Thus dataframes 176   rows, one per species 20 rows, one per holdfast.","code":""},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset due to Saunders — saunders","text":"Kelp large seaweeds classified kingdom Chromista.  Kelp grows   shallow oceans kelp forests. holdfast root-like structure anchors kelp   ocean floor.  Fauna inhabiting kelp holdfasts,   “incredibly diverse” (Anderson et al 2005), often used   indicators environmental change. data collected New Zealand, eight sites along   Leigh coastline north Leigh Harbour southern end   Kawau Island (stretch roughly 20 km).  Four sites   wave-exposed, four sheltered (although two latter   arguably quite tidally-dominated).  site spatial extent   roughly one hectare.  collected 5 - 10 November, 2003. saunders dataset must arranged   transposed, first row (nonsensical) observation   c(T,T,...,T,F,...,F).","code":""},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Dataset due to Saunders — saunders","text":"entirely obvious derive summary datasets   saunders dataframe.  Use function extractor() .","code":""},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataset due to Saunders — saunders","text":"Data supplied Justine Saunders","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset due to Saunders — saunders","text":"J. Saunders 2007.  “Biodiversity kelp holdfasts”       (provisional title).  PhD thesis (preparation); School Geography       Environmental Sciences, University Auckland M. J. Anderson others 2005.  “Consistency \tvariation kelp holdfast assemblages: Spatial patterns \tbiodiversity major phyla different taxonomic resolutions”.       Journal Experimental Marine Biology Ecology. Volume 320, pages       35-56","code":""},{"path":"https://robinhankin.github.io/untb/reference/saunders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset due to Saunders — saunders","text":"","code":"data(\"saunders\")  jj <- t(saunders)[-1,] jj.exposed <- saunders[,1] \"saunders.tot\" <- count(apply(jj,1,sum)) \"saunders.exposed\"   <- jj[, jj.exposed] \"saunders.sheltered\" <- jj[,!jj.exposed] \"saunders.exposed.tot\"   <- count(apply(saunders.exposed,1,sum)) \"saunders.sheltered.tot\" <- count(apply(saunders.sheltered,1,sum))   plot(saunders.sheltered.tot, uncertainty=TRUE, n=1) #> Warning: 44 y values <= 0 omitted from logarithmic plot  preston(saunders.tot) #>                   1   2  3-4  5-8  9-16  17-32  33-64  65-128  129-256  257-512 #> number of species 42 14   21   22    13     20     15      11       11        5 #>                    513-1024  1025-Inf #> number of species         1         1 optimal.params.sloss(saunders.exposed) #> $theta #> [1] 28.52424 #>  #> $m #>  [1] 0.040349346 0.027906106 0.035745262 0.020890392 0.037968216 0.027071664 #>  [7] 0.026166268 0.009891326 0.015670728 0.008559140 0.045414066 0.022966887 #> [13] 0.034808129 0.040139139 0.056193112 0.020022698 0.008357949 0.006685073 #> [19] 0.025335928 0.022986263 #>  #> $I #>  [1] 28.0866408  7.4925823 18.3127536  4.6939446 23.3642840  5.9545353 #>  [7]  7.3621986  0.4595465  1.7034624  0.6388443 26.9272364  4.7483665 #> [13] 19.0775540 15.4725359 29.5907744  3.8207461  0.5478456  0.3297731 #> [19]  5.2508937  6.2581986 #>"},{"path":"https://robinhankin.github.io/untb/reference/simpson.html","id":null,"dir":"Reference","previous_headings":"","what":"Simpson's diversity index — simpson","title":"Simpson's diversity index — simpson","text":"Simpson's diversity index","code":""},{"path":"https://robinhankin.github.io/untb/reference/simpson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simpson's diversity index — simpson","text":"","code":"simpson(x, with.replacement=FALSE)"},{"path":"https://robinhankin.github.io/untb/reference/simpson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simpson's diversity index — simpson","text":"x Ecosystem vector; coerced class count .replacement Boolean, default FALSE meaning     sample without replacement; see details section","code":""},{"path":"https://robinhankin.github.io/untb/reference/simpson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simpson's diversity index — simpson","text":"Returns Simpson index \\(D\\):   probability two randomly sampled individuals belong   different species. confusion precise definition: authors   specify two individuals necessarily distinct (ie sampling   without replacement), . Simpson (1949) assumed sampling without replacement gave $$ 1-\\frac{\\sum_{=1}^Sn_i\\left(n_i-1\\right)}{J(J-1)} $$   notation. Hu (2005) assumed sampling replacement:   $$ 1-\\frac{\\sum_{=1}^Sn_i^2}{J^2}. $$ difference largely academic pronounced many   species occur low counts (ie close 1).","code":""},{"path":"https://robinhankin.github.io/untb/reference/simpson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simpson's diversity index — simpson","text":"S. P. Hubbell 2001.     “Unified Neutral Theory Biodiversity”.     Princeton University Press. F. X.-S. Hu 2005.     “Hubbell's Fundamental Biodiversity       Parameter Simpson Diversity Index”.  Ecology Letters, volume 8,     pp386-390. doi: 10.1111/j.1461-0248.2005.00729.x E. H. Simpson 1949. “Measurement diversity”,     Nature, volume 163, p688","code":""},{"path":"https://robinhankin.github.io/untb/reference/simpson.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simpson's diversity index — simpson","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/simpson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simpson's diversity index — simpson","text":"","code":"data(butterflies)  D <- simpson(butterflies) theta <- optimal.prob(butterflies)*2*no.of.ind(butterflies)  # compare theta with D/(1-D) (should be roughly equal; see He & Hu 2005): theta #> [1] 9.989579 D/(1-D) #> [1] 11.32517   # Second argument pedantic in practice.  # Mostly, the difference is small: simpson(butterflies,FALSE) - simpson(butterflies,TRUE) #> [1] 0.002443791  # Most extreme example: x <- count(c(1,1)) simpson(x,TRUE) #> [1] 0.5 simpson(x,FALSE) #> [1] 1"},{"path":"https://robinhankin.github.io/untb/reference/species.count.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecosystem diagnostics for output of untb() — species.count","title":"Ecosystem diagnostics for output of untb() — species.count","text":"Provides ecosystem diagnostics species count datasets (species counts species tables), useful output untb()","code":""},{"path":"https://robinhankin.github.io/untb/reference/species.count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ecosystem diagnostics for output of untb() — species.count","text":"","code":"species.count(x) species.table(x)"},{"path":"https://robinhankin.github.io/untb/reference/species.count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ecosystem diagnostics for output of untb() — species.count","text":"x integer matrix whose rows integers     representing individuals' species","code":""},{"path":"https://robinhankin.github.io/untb/reference/species.count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ecosystem diagnostics for output of untb() — species.count","text":"functions takes matrix argument, interpreted   output untb(...,keep=TRUE). Function species.count() returns total number species   present row (ie timestep). Function species.table() returns matrix \\(M\\)   M[,j]   column matrix abundance species \\(j\\)   time .","code":""},{"path":"https://robinhankin.github.io/untb/reference/species.count.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ecosystem diagnostics for output of untb() — species.count","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/species.count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ecosystem diagnostics for output of untb() — species.count","text":"","code":"a <- untb(start=rep(1,50), prob=0.01, gens=2000, keep=TRUE)  plot(species.count(a),type=\"b\")  matplot(species.table(a),type=\"l\",lty=1)   jj <- a[2000,] print(jj) #>  [1] 12  1 12  8 12 12  1  1 12  1 12  8 12  1 12  1 12  1  1 12  8 12 12  1 12 #> [26]  1  1 12 12  8  1  1  1  1 12  1  1  1 12  8  1  1  8  1  1  8  8 12  8  8 as.count(jj) #>  1 12  8  #> 22 18 10"},{"path":"https://robinhankin.github.io/untb/reference/spitale.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts of diatom species in springs of the Adamello-Brenta Nature Park — spitale","title":"Counts of diatom species in springs of the Adamello-Brenta Nature Park — spitale","text":"dataset due Spitale Cantonati comprising abundances   different species diatoms","code":""},{"path":"https://robinhankin.github.io/untb/reference/spitale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts of diatom species in springs of the Adamello-Brenta Nature Park — spitale","text":"","code":"data(spitale)"},{"path":"https://robinhankin.github.io/untb/reference/spitale.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Counts of diatom species in springs of the Adamello-Brenta Nature Park — spitale","text":"count object","code":""},{"path":"https://robinhankin.github.io/untb/reference/spitale.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Counts of diatom species in springs of the Adamello-Brenta Nature Park — spitale","text":"Data kindly provided Daniel Spitale","code":""},{"path":"https://robinhankin.github.io/untb/reference/spitale.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Counts of diatom species in springs of the Adamello-Brenta Nature Park — spitale","text":"D. Spitale M. Cantonati 2011.  “Understanding natural     variability diatom assemblages springs Adamello-Brenta     Nature Park (south-eastern Alps) temporal scale”.   Fundamental Applied Limnology volume 179/2, pp137–149","code":""},{"path":"https://robinhankin.github.io/untb/reference/spitale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counts of diatom species in springs of the Adamello-Brenta Nature Park — spitale","text":"","code":"data(spitale) summary(spitale) #> Number of individuals: 14842  #> Number of species: 76  #> Number of singletons: 16  #> Most abundant species: ACHNMINU (4667 individuals) #> estimated theta:  10.39131"},{"path":"https://robinhankin.github.io/untb/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary methods for count and census objects — summary.count","title":"Summary methods for count and census objects — summary.count","text":"Summary methods count census objects","code":""},{"path":"https://robinhankin.github.io/untb/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary methods for count and census objects — summary.count","text":"","code":"# S3 method for class 'count' summary(object, ...) # S3 method for class 'census' summary(object, ...)"},{"path":"https://robinhankin.github.io/untb/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary methods for count and census objects — summary.count","text":"object Ecosystem object coerced class count ... arguments, currently ignored","code":""},{"path":"https://robinhankin.github.io/untb/reference/summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary methods for count and census objects — summary.count","text":"Prints summary ecosystem object.","code":""},{"path":"https://robinhankin.github.io/untb/reference/summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary methods for count and census objects — summary.count","text":"Robin K. S. Hankin","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary methods for count and census objects — summary.count","text":"","code":"data(ostracod) summary(ostracod) #> Number of individuals: 1159337  #> Number of species: 129  #> Number of singletons: 2  #> Most abundant species: o010650 (102035 individuals) #> estimated theta:  11.12049"},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior probabilities for theta — theta.prob","title":"Posterior probabilities for theta — theta.prob","text":"Determines posterior probability likelihood theta,   given count object","code":""},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior probabilities for theta — theta.prob","text":"","code":"theta.prob(theta, x=NULL, give.log=TRUE) theta.likelihood(theta, x=NULL, S=NULL, J=NULL, give.log=TRUE)"},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior probabilities for theta — theta.prob","text":"theta biodiversity parameter x object class count census give.log Boolean, FALSE meaning return      value, default TRUE meaning return     (natural) logarithm value S, J function theta.likelihood(), number     individuals (J) number species (S)     ecosystem, x     supplied.  arguments provided x need     specified S J known.","code":""},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior probabilities for theta — theta.prob","text":"formula originally given Ewens (1972) shown   page 122 Hubbell (2001):   $$\\frac{J!\\theta^S}{       1^{\\phi_1}2^{\\phi_2}\\ldots J^{\\phi_J}       \\phi_1!\\phi_2!\\ldots \\phi_J!       \\prod_{k=1}^J\\left(\\theta+k-1\\right)}.$$ likelihood thus given   $$\\frac{\\theta^S}{\\prod_{k=1}^J\\left(\\theta+k-1\\right)}.$$ Etienne observes denominator equivalent Pochhammer symbol \\((\\theta)_J\\), thus readily evaluated \\(\\Gamma(\\theta+J)/\\Gamma(\\theta)\\) (Abramowitz Stegun 1965, equation 6.1.22).","code":""},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Posterior probabilities for theta — theta.prob","text":"S. P. Hubbell 2001.     “Unified Neutral Theory Biodiversity”,     Princeton University Press. W. J. Ewens 1972.  “sampling theory selectively       neutral alleles”, Theoretical Population Biology, 3:87–112 M. Abramowitz . . Stegun 1965.     Handbook Mathematical Functions, New York: Dover","code":""},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Posterior probabilities for theta — theta.prob","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Posterior probabilities for theta — theta.prob","text":"estimating theta, use theta.likelihood() rather   theta.probability() former function generally   executes much faster: latter calculates factor   independent theta. likelihood function \\(L(\\theta)\\) function   \\(\\theta\\) proportional, fixed observation \\(z\\),   probability density \\(f(z,\\theta)\\).  thus   slight notational inaccuracy speaking “” likelihood   function defined multiplicative constant.  Note   also “support” function usually defined   likelihood function maximum value \\(1\\) (maximum   likelihood estimator \\(\\theta\\)).  easy   determine analytically \\(J>5\\). Note \\(S\\) sufficient statistic \\(\\theta\\). Function theta.prob() give PDF   \\(\\theta\\) (, example, integrating real line   give unity).  PDF partitions \\(J\\);   example given . Function theta.prob() requires count object (opposed   theta.likelihood(),  \\(J\\) \\(S\\)   sufficient) needs call phi().","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/theta.prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior probabilities for theta — theta.prob","text":"","code":"theta.prob(1,rand.neutral(15,theta=2)) #> [1] -5.347108  gg <- as.count(c(rep(\"a\",10),rep(\"b\",3),letters[5:9])) theta.likelihood(theta=2,gg) #> [1] -34.48785  optimize(f=theta.likelihood,interval=c(0,100),maximum=TRUE,x=gg) #> $maximum #> [1] 3.720075 #>  #> $objective #> [1] -33.87535 #>    ## An example showing that theta.prob() is indeed a PMF:  a <- count(c(dogs=3,pigs=3,hogs=2,crabs=1,bugs=1,bats=1)) x <- partitions::parts(no.of.ind(a)) f <- function(x){theta.prob(theta=1.123,extant(count(x)),give.log=FALSE)} sum(apply(x,2,f))  ## should be one exactly. #> [1] 1"},{"path":"https://robinhankin.github.io/untb/reference/untb.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","title":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","text":"Simulates ecological drift UNTB.  Function untb() carries simulation; function select() carries single generational step.","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","text":"","code":"untb(start, prob=0, D=1, gens=150, keep=FALSE, meta=NULL) select(a, D=length(a), prob=0, meta=NULL) select.mutate(a, D=length(a), prob.of.mutate=0) select.immigrate(a, D=length(a), prob.of.immigrate=0, meta)"},{"path":"https://robinhankin.github.io/untb/reference/untb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","text":", start Starting ecosystem; coerced class census.  Usually,     pass object class count; see examples.  start     monoculture size 10, use start=rep(1,10)     use start=1:10. prob, prob..immigrate, prob..mutate Probability     “new” organism descendent existing     individual D Number organisms die timestep gens Number generations simulate keep function untb() Boolean default     FALSE meaning return system end     simulation TRUE meaning return matrix whose rows     ecosystem successive times meta function untb(), metacommunity; coerced     count object.  Default NULL means use     “greedy” system every mutation gives rise new,     previously unencountered species.  correspond     infinitely large, infinitely diverse, Hubbellian ecosystem (    ridiculous assumption small island near large     diverse mainland). function select.immigrate(), simplified representation     metacommunity.","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","text":"Functions select.immigrate() select.mutate()   really intended end user; use computationally efficient   (opaque) integer arithmetic.","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","text":"S. P. Hubbell 2001.  “Unified Neutral Theory Biodiversity”.   Princeton University Press.","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ecological drift simulation under the Unified Neutral Theory of Biodiversity — untb","text":"","code":"data(butterflies) untb(start=butterflies, prob=0, gens=100) #>  1  3  2  4  5  7  6  8  9 10 11 18 12 15 16 13 14 19 25 29 37 20 21 24 27 32  #> 61 50 48 37 23 19 18 15 15  8  6  6  5  5  5  4  4  4  4  4  4  3  3  3  3  3  #> 17 22 23 26 34 28 30 31 33 35 36  #>  2  2  2  2  2  1  1  1  1  1  1   a <- untb(start=1:10,prob=0.005, gens=1000,keep=TRUE) plot(species.count(a),type=\"b\")  matplot(species.table(a),type=\"l\",lty=1)"},{"path":"https://robinhankin.github.io/untb/reference/untb.package.html","id":null,"dir":"Reference","previous_headings":"","what":"Unified neutral theory of biodiversity — untb-package","title":"Unified neutral theory of biodiversity — untb-package","text":"Numerical simulations, visualizations, unified   neutral theory biodiversity","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unified neutral theory of biodiversity — untb-package","text":"Package untb uses two classes object represent ecosystem: class count class census.  essence, count object table species abundances census object list individuals.  See ?census ?count details.  Although objects either class can coerced , class count preferred form: compact representation, especially large ecosystems. package simulates neutral ecological drift using function untb().  Function display.untb() displays semi-animated graphic ecosystem undergoing neutral drift.","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Unified neutral theory of biodiversity — untb-package","text":"Robin K. S. Hankin Maintainer: <hankin.robin@gmail.com>","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unified neutral theory of biodiversity — untb-package","text":"S. P. Hubbell 2001.  “Unified Neutral Theory       Biodiversity”.   Princeton University Press. R. K. S. Hankin 2007.  Introducing untb, R       package simulating ecological drift unified neutral       theory biodiversity.  Journal Statistical Software, volume     22, issue 12","code":""},{"path":"https://robinhankin.github.io/untb/reference/untb.package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unified neutral theory of biodiversity — untb-package","text":"","code":"a <- untb(start=rep(1,100),prob=0.005,gens=5000,keep=FALSE) preston(a) #>                   1  2  3-4  5-8  9-16  17-32  33-Inf #> number of species  0 0    1    0     1      0       2 no.of.spp(a) #> [1] 4  display.untb(start=rep(1,100),prob=0.1,gens=1000)   data(butterflies) plot(butterflies,uncertainty=TRUE)"},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":null,"dir":"Reference","previous_headings":"","what":"Various functions from Vallade and Houchmandzadeh — vallade","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"Various functions Vallade Houchmandzadeh (2003), dealing analytical solutions neutral model biodiversity","code":""},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"","code":"vallade.eqn5(JM, theta, k) vallade.eqn7(JM, theta) vallade.eqn12(J, omega, m, n) vallade.eqn14(J, theta, m, n) vallade.eqn16(J, theta, mu) vallade.eqn17(mu, theta, omega, give=FALSE)"},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"J,JM Size community metacommunity respectively theta Biodiversity number     \\(\\theta=(J_M-1)\\nu/(1-\\nu)\\) discussed     equation 6 k,n Abundance omega Relative abundance \\(\\omega=k/J_M\\) m Immigration probability mu Scaled immigration probability     \\(\\mu=(J-1)m/(1-m)\\) give function vallade.eqn17(), Boolean default     FALSE meaning return numerical value integral     TRUE meaning return entire output     integrate() including error estimates","code":""},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"Notation follows Vallade Houchmandzadeh (2003) exactly.","code":""},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"M. Vallade B. Houchmandzadeh 2003. “Analytical Solution     Neutral Model Biodiversity”, Physical Review E, volume 68.   doi: 10.1103/PhysRevE.68.061902","code":""},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"Function vallade.eqn16() requires polynom library,   loaded default.  run \\(J>50\\) due   stack overflow error. Function vallade.eqn5() identical function   alonso.eqn6()","code":""},{"path":"https://robinhankin.github.io/untb/reference/vallade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Various functions from Vallade and Houchmandzadeh — vallade","text":"","code":"# A nice check: JM <- 100 k <- 1:JM sum(k*vallade.eqn5(JM,theta=5,k))  # should be JM=100 exactly. #> [1] 100    # Now, a replication of Figure 3:   omega <- seq(from=0.01, to=0.99,len=100)   f <- function(omega,mu){     vallade.eqn17(mu,theta=5, omega=omega)   }   plot(omega,   omega*5,type=\"n\",xlim=c(0,1),ylim=c(0,5),         xlab=expression(omega),         ylab=expression(omega*g[C](omega)),         main=\"Figure 3 of Vallade and Houchmandzadeh\")   points(omega,omega*sapply(omega,f,mu=0.5),type=\"l\")   points(omega,omega*sapply(omega,f,mu=1),type=\"l\")   points(omega,omega*sapply(omega,f,mu=2),type=\"l\")   points(omega,omega*sapply(omega,f,mu=4),type=\"l\")   points(omega,omega*sapply(omega,f,mu=8),type=\"l\")   points(omega,omega*sapply(omega,f,mu=16),type=\"l\")   points(omega,omega*sapply(omega,f,mu=Inf),type=\"l\")      # Now a discrete version of Figure 3 using equation 14: J <- 100 omega <- (1:J)/J  f <- function(n,mu){    m <- mu/(J-1+mu)    vallade.eqn14(J=J, theta=5, m=m, n=n)  } plot(omega,omega*0.03,type=\"n\",main=\"Discrete version of Figure 3 using    eqn 14\") points(omega,omega*sapply(1:J,f,mu=16)) points(omega,omega*sapply(1:J,f,mu=8)) points(omega,omega*sapply(1:J,f,mu=4)) points(omega,omega*sapply(1:J,f,mu=2)) points(omega,omega*sapply(1:J,f,mu=1)) points(omega,omega*sapply(1:J,f,mu=0.5))"},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected frequency of species — volkov","title":"Expected frequency of species — volkov","text":"Given community size, biodiversity parameter \\(\\theta\\),   immigration rate \\(m\\), returns expected frequency   species \\(n\\)  individuals, \\(0<n\\leq J\\).","code":""},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected frequency of species — volkov","text":"","code":"volkov(J, params, bins = FALSE, give = FALSE)"},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected frequency of species — volkov","text":"J Size community params two-element vector first element interpreted     theta, Fundamental biodiversity parameter second, m,     interpreted probability immigration.  argument     accept output optimal.params() bins Boolean, default FALSE meaning return     expected number species \\(1,2,\\ldots,J\\)     individuals, FALSE meaning return binned total,     using Preston-like binning system used preston() give Boolean, TRUE meaning return     output integrate(), default FALSE meaning     return just value integral","code":""},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected frequency of species — volkov","text":"Returns object class “phi”.","code":""},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Expected frequency of species — volkov","text":". Volkov others 2003. “Neutral theory relative species   abundance ecology”.  Nature, volume 424, number 28.","code":""},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expected frequency of species — volkov","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Expected frequency of species — volkov","text":"method used slightly inefficient: terms left   integral sign [Volkov's equation 7] integrated ,   strictly, unnecessary function \\(y\\).  However,   taking advantage fact results messy code.","code":""},{"path":[]},{"path":"https://robinhankin.github.io/untb/reference/volkov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected frequency of species — volkov","text":"","code":"if (FALSE) { # \\dontrun{   volkov(J=21457,c(theta=47.226, m=0.1)) # Example in figure 1 } # }   volkov(J=20,params=c(theta=1,m=0.4)) #>  [1] 0.59067733 0.36193725 0.25810432 0.19659328 0.15567107 0.12660270 #>  [7] 0.10504586 0.08854998 0.07561319 0.06526131 0.05683587 0.04987788 #> [13] 0.04405974 0.03914391 0.03495774 0.03138073 0.02834761 0.02589611 #> [19] 0.02447062 0.03341949   data(butterflies)  r <- plot(preston(butterflies,n=9,orig=TRUE))   if (FALSE)   jj <- optimal.params(butterflies)   # \\dontrun{}  # needs PARI/GP   jj <- c(9.99980936124759, 0.991791987473506)   points(r,volkov(no.of.ind(butterflies), jj, bins=TRUE),type=\"b\")"},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero sum multinomial distribution as derived by McKane — zsm","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":"Zero sum multinomial distribution species abundances derived   McKane 2004.","code":""},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":"","code":"zsm(J, P, m)"},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":"J Size local community P Abundance metacommunity m Probability immigration","code":""},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":"Returns vector size J showing probability stationary abundance \\(1,\\ldots,J\\).","code":""},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":". J. McKane others 2004. “Analytic solution     Hubbell's model local community dynamics”.  Theoretical Population   Biology 65:67-73","code":""},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":"Robin K. S. Hankin","code":""},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":"function uses lgamma() avoid numerical overflow","code":""},{"path":"https://robinhankin.github.io/untb/reference/zsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero sum multinomial distribution as derived by McKane — zsm","text":"","code":"sum(zsm(164,0.1,0.5))  # should be 1 #> [1] 1    # McKane et al 2004: figure 1. layout(matrix(1:4,2,2)) par(mai=0.2+rep(0,4)) plot(1,type=\"n\",log=\"y\",ylim=c(1e-9,1),xlim=c(0,64),xlab=\"\",ylab=\"Ps(N)\",      axes=FALSE,main=expression(J==64)) axis(1,pos=1e-9) axis(2,pos=0,at=10^(-(0:9))) segments(64,1e-9,64,1) segments(60,1e-9,64,1e-9) f <- function(P){points(0:64,zsm(64,P=P,m=0.05),type=\"l\")} for(i in 1:9){f(i/10)} f(0.99) f(0.999) f(0.01) f(0.001) text(07,3.2e-7,adj=0,expression(P==0.999)) text(49,3.2e-7,adj=0,expression(P==0.001)) text(45,0.1,expression(m==0.05))   plot(1,type=\"n\",log=\"y\",ylim=c(1e-5,1),xlim=c(0,64),xlab=\"\",ylab=\"Ps(N)\",      axes=FALSE,main=\"\") axis(1,pos=1e-5) axis(2,pos=0,at=10^-(0:5)) segments(60,1e-5,64,1e-5) segments(64,1e-5,64,1) par(xpd=FALSE) g <- function(m){points(0:64,pmax(zsm(64,P=0.1,m=m),1e-5),type=\"l\")} g(0.0001) g(0.0005) g(0.002) g(0.01) g(0.02) g(0.05) g(0.5) g(0.999) text(50,0.4,expression(P==0.1))  plot(1,type=\"n\",log=\"y\",ylim=c(1e-9,1),xlim=c(0,1e5),xlab=\"\",ylab=\"Ps(N)\",      axes=FALSE,main=expression(J==10000)) axis(1,pos=1e-9) axis(2,pos=0) segments(1e5,1e-9,1e5,0.1)   h <- function(P){points(0:1e5,pmax(zsm(1e5,P=P,m=0.05),1e-9),type=\"l\")} for(i in 1:9){h(i/10)} h(0.01) h(0.99) text(75000,0.1,expression(m==0.5))  plot(1,type=\"n\",log=\"y\",ylim=c(1e-40,1),xlim=c(0,1e5),xlab=\"\",ylab=\"Ps(N)\",      axes=FALSE,main=\"\") axis(1,pos=1e-40) axis(2,pos=0,at=1/10^c(40,32,24,16,8,0)) segments(1e5,1e-40,1e5,1)  i <- function(m){points(0:1e5,pmax(zsm(1e5,P=0.1,m=m),1e-40),type=\"l\")} i(0.0001) i(0.0002) i(0.0005) i(0.001) i(0.002) i(0.005) i(0.01) i(0.02) i(0.5) text(60000,1e-4,expression(P==0.1))"}]
